{{/*
Secret reuse logic:
- If `reuseExisting` is true, the chart attempts to reuse an existing secret with the same name and key.
- If the secret has been deleted or modified externally, the latest state is reused.
- Set `auth.tokenSecret.forceRegenerate=true` to ignore existing data and issue a new value on this upgrade.
*/}}
{{- if and .Values.auth.tokenSecret.create (not .Values.auth.tokenSecret.existingSecret) }}
{{- $secretName := include "mcp-copilot-api-helm.tokenSecretName" . -}}
{{- $secretKey := default "GH_TOKEN" .Values.auth.tokenSecret.key -}}
{{- $forceRegenerate := default false .Values.auth.tokenSecret.forceRegenerate -}}
{{- $shouldReuse := and (default true .Values.auth.tokenSecret.reuseExisting) (not $forceRegenerate) -}}
{{- $existingSecret := dict -}}
{{- if $shouldReuse -}}
  {{- $existingSecret = (lookup "v1" "Secret" .Release.Namespace $secretName) -}}
{{- end -}}
{{- $existingValue := "" -}}
{{- if and $shouldReuse $existingSecret -}}
  {{- $existingData := index $existingSecret "data" -}}
  {{- if and $existingData (hasKey $existingData $secretKey) -}}
    {{- $existingValue = index $existingData $secretKey -}}
  {{- end -}}
{{- end -}}
{{- $tokenValue := $existingValue -}}
{{- if and .Values.auth.tokenSecret.value .Values.auth.tokenSecret.valueBase64 -}}
  {{- fail "Only one of auth.tokenSecret.value or auth.tokenSecret.valueBase64 may be set" -}}
{{- end -}}
{{- if .Values.auth.tokenSecret.valueBase64 -}}
  {{- $tokenValue = .Values.auth.tokenSecret.valueBase64 -}}
{{- else if .Values.auth.tokenSecret.value -}}
  {{- $tokenValue = (b64enc .Values.auth.tokenSecret.value) -}}
{{- else if and .Values.auth.tokenSecret.generate (not $existingValue) -}}
  {{- $tokenValue = (randAlphaNum 40 | b64enc) -}}
{{- end -}}
{{- if not $tokenValue -}}
  {{- fail (printf "auth.tokenSecret.value must be provided or auth.tokenSecret.generate must be true for secret '%s'" $secretName) -}}
{{- end -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName }}
  labels:
    {{- include "mcp-copilot-api-helm.labels" . | nindent 4 }}
  {{- with .Values.auth.tokenSecret.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
type: Opaque
data:
  {{ $secretKey }}: {{ $tokenValue }}
{{- end }}
